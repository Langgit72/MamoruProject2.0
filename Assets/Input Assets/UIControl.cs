//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Input Assets/UIControl.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @UIControl : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @UIControl()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""UIControl"",
    ""maps"": [
        {
            ""name"": ""InventoryMap"",
            ""id"": ""b124475e-9f29-41ef-940e-b207d8e22a92"",
            ""actions"": [
                {
                    ""name"": ""UP"",
                    ""type"": ""Button"",
                    ""id"": ""5226c3da-76f0-40b8-b7f8-06e125f90ebb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DOWN"",
                    ""type"": ""Button"",
                    ""id"": ""98f97600-f6c5-41df-b818-cac8d5b2c9db"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LEFT"",
                    ""type"": ""Button"",
                    ""id"": ""1f5d595d-81b9-4a73-ba14-df06b7b3c160"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RIGHT"",
                    ""type"": ""Button"",
                    ""id"": ""4d4fa809-2ea3-4f32-a953-aa0e01f78117"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Close"",
                    ""type"": ""Button"",
                    ""id"": ""1bc9391e-9afd-491b-b76f-2ae9a18bc2d9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TYPER"",
                    ""type"": ""Button"",
                    ""id"": ""c330dab4-438a-4816-ac4d-b380b58580c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TYPEL"",
                    ""type"": ""Button"",
                    ""id"": ""3332afc3-e17b-4b4c-92d9-8c3fde1a1341"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""USE"",
                    ""type"": ""Button"",
                    ""id"": ""9adfcd62-702b-4d3e-bfc1-64f4b7d5a527"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""REMOVE"",
                    ""type"": ""Button"",
                    ""id"": ""12a7c5db-1d2f-42f6-b8fd-e30c1faa58a6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5c7107ae-c8d3-4e1b-bd01-d835c5f804eb"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69f2532c-53c1-4da4-a0a6-a137fdeb6fd8"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DOWN"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c782264-931b-4421-9f15-265336151b79"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LEFT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""28fa401c-92cc-49d5-a6c2-5165c7c51925"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RIGHT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b4e1baf-4de5-4bea-87c2-bfd2a6ad9ee1"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Close"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""472b857f-de91-46b3-8761-b55247481e94"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TYPER"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ae58c6f-ede0-4609-942e-768d0eaded96"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TYPEL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df512e4e-ffd9-40f5-a95e-209602eb2f50"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""USE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""372fa5c2-1ebb-42fc-9936-ab870ae380f8"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""REMOVE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""DialougeMap"",
            ""id"": ""ca06d762-b038-48da-9ab3-fd1a87384ab8"",
            ""actions"": [
                {
                    ""name"": ""Next"",
                    ""type"": ""Button"",
                    ""id"": ""49b470a2-accf-409e-9c6e-744789b27d29"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Special1"",
                    ""type"": ""Button"",
                    ""id"": ""47b6f6e0-6968-4db3-b5d9-78ab93e3e176"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Special2"",
                    ""type"": ""Button"",
                    ""id"": ""f4521209-78b3-47c1-b100-7a60005b07be"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""14ec2eeb-714e-4f96-b773-95a32979756f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Next"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""faee4b0b-36de-43c3-be16-46b6d060f9f3"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Special1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""02f976ea-3f56-4d32-a98f-3f5b7bc29f39"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Special2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // InventoryMap
        m_InventoryMap = asset.FindActionMap("InventoryMap", throwIfNotFound: true);
        m_InventoryMap_UP = m_InventoryMap.FindAction("UP", throwIfNotFound: true);
        m_InventoryMap_DOWN = m_InventoryMap.FindAction("DOWN", throwIfNotFound: true);
        m_InventoryMap_LEFT = m_InventoryMap.FindAction("LEFT", throwIfNotFound: true);
        m_InventoryMap_RIGHT = m_InventoryMap.FindAction("RIGHT", throwIfNotFound: true);
        m_InventoryMap_Close = m_InventoryMap.FindAction("Close", throwIfNotFound: true);
        m_InventoryMap_TYPER = m_InventoryMap.FindAction("TYPER", throwIfNotFound: true);
        m_InventoryMap_TYPEL = m_InventoryMap.FindAction("TYPEL", throwIfNotFound: true);
        m_InventoryMap_USE = m_InventoryMap.FindAction("USE", throwIfNotFound: true);
        m_InventoryMap_REMOVE = m_InventoryMap.FindAction("REMOVE", throwIfNotFound: true);
        // DialougeMap
        m_DialougeMap = asset.FindActionMap("DialougeMap", throwIfNotFound: true);
        m_DialougeMap_Next = m_DialougeMap.FindAction("Next", throwIfNotFound: true);
        m_DialougeMap_Special1 = m_DialougeMap.FindAction("Special1", throwIfNotFound: true);
        m_DialougeMap_Special2 = m_DialougeMap.FindAction("Special2", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // InventoryMap
    private readonly InputActionMap m_InventoryMap;
    private IInventoryMapActions m_InventoryMapActionsCallbackInterface;
    private readonly InputAction m_InventoryMap_UP;
    private readonly InputAction m_InventoryMap_DOWN;
    private readonly InputAction m_InventoryMap_LEFT;
    private readonly InputAction m_InventoryMap_RIGHT;
    private readonly InputAction m_InventoryMap_Close;
    private readonly InputAction m_InventoryMap_TYPER;
    private readonly InputAction m_InventoryMap_TYPEL;
    private readonly InputAction m_InventoryMap_USE;
    private readonly InputAction m_InventoryMap_REMOVE;
    public struct InventoryMapActions
    {
        private @UIControl m_Wrapper;
        public InventoryMapActions(@UIControl wrapper) { m_Wrapper = wrapper; }
        public InputAction @UP => m_Wrapper.m_InventoryMap_UP;
        public InputAction @DOWN => m_Wrapper.m_InventoryMap_DOWN;
        public InputAction @LEFT => m_Wrapper.m_InventoryMap_LEFT;
        public InputAction @RIGHT => m_Wrapper.m_InventoryMap_RIGHT;
        public InputAction @Close => m_Wrapper.m_InventoryMap_Close;
        public InputAction @TYPER => m_Wrapper.m_InventoryMap_TYPER;
        public InputAction @TYPEL => m_Wrapper.m_InventoryMap_TYPEL;
        public InputAction @USE => m_Wrapper.m_InventoryMap_USE;
        public InputAction @REMOVE => m_Wrapper.m_InventoryMap_REMOVE;
        public InputActionMap Get() { return m_Wrapper.m_InventoryMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InventoryMapActions set) { return set.Get(); }
        public void SetCallbacks(IInventoryMapActions instance)
        {
            if (m_Wrapper.m_InventoryMapActionsCallbackInterface != null)
            {
                @UP.started -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnUP;
                @UP.performed -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnUP;
                @UP.canceled -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnUP;
                @DOWN.started -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnDOWN;
                @DOWN.performed -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnDOWN;
                @DOWN.canceled -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnDOWN;
                @LEFT.started -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnLEFT;
                @LEFT.performed -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnLEFT;
                @LEFT.canceled -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnLEFT;
                @RIGHT.started -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnRIGHT;
                @RIGHT.performed -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnRIGHT;
                @RIGHT.canceled -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnRIGHT;
                @Close.started -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnClose;
                @Close.performed -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnClose;
                @Close.canceled -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnClose;
                @TYPER.started -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnTYPER;
                @TYPER.performed -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnTYPER;
                @TYPER.canceled -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnTYPER;
                @TYPEL.started -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnTYPEL;
                @TYPEL.performed -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnTYPEL;
                @TYPEL.canceled -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnTYPEL;
                @USE.started -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnUSE;
                @USE.performed -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnUSE;
                @USE.canceled -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnUSE;
                @REMOVE.started -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnREMOVE;
                @REMOVE.performed -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnREMOVE;
                @REMOVE.canceled -= m_Wrapper.m_InventoryMapActionsCallbackInterface.OnREMOVE;
            }
            m_Wrapper.m_InventoryMapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @UP.started += instance.OnUP;
                @UP.performed += instance.OnUP;
                @UP.canceled += instance.OnUP;
                @DOWN.started += instance.OnDOWN;
                @DOWN.performed += instance.OnDOWN;
                @DOWN.canceled += instance.OnDOWN;
                @LEFT.started += instance.OnLEFT;
                @LEFT.performed += instance.OnLEFT;
                @LEFT.canceled += instance.OnLEFT;
                @RIGHT.started += instance.OnRIGHT;
                @RIGHT.performed += instance.OnRIGHT;
                @RIGHT.canceled += instance.OnRIGHT;
                @Close.started += instance.OnClose;
                @Close.performed += instance.OnClose;
                @Close.canceled += instance.OnClose;
                @TYPER.started += instance.OnTYPER;
                @TYPER.performed += instance.OnTYPER;
                @TYPER.canceled += instance.OnTYPER;
                @TYPEL.started += instance.OnTYPEL;
                @TYPEL.performed += instance.OnTYPEL;
                @TYPEL.canceled += instance.OnTYPEL;
                @USE.started += instance.OnUSE;
                @USE.performed += instance.OnUSE;
                @USE.canceled += instance.OnUSE;
                @REMOVE.started += instance.OnREMOVE;
                @REMOVE.performed += instance.OnREMOVE;
                @REMOVE.canceled += instance.OnREMOVE;
            }
        }
    }
    public InventoryMapActions @InventoryMap => new InventoryMapActions(this);

    // DialougeMap
    private readonly InputActionMap m_DialougeMap;
    private IDialougeMapActions m_DialougeMapActionsCallbackInterface;
    private readonly InputAction m_DialougeMap_Next;
    private readonly InputAction m_DialougeMap_Special1;
    private readonly InputAction m_DialougeMap_Special2;
    public struct DialougeMapActions
    {
        private @UIControl m_Wrapper;
        public DialougeMapActions(@UIControl wrapper) { m_Wrapper = wrapper; }
        public InputAction @Next => m_Wrapper.m_DialougeMap_Next;
        public InputAction @Special1 => m_Wrapper.m_DialougeMap_Special1;
        public InputAction @Special2 => m_Wrapper.m_DialougeMap_Special2;
        public InputActionMap Get() { return m_Wrapper.m_DialougeMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DialougeMapActions set) { return set.Get(); }
        public void SetCallbacks(IDialougeMapActions instance)
        {
            if (m_Wrapper.m_DialougeMapActionsCallbackInterface != null)
            {
                @Next.started -= m_Wrapper.m_DialougeMapActionsCallbackInterface.OnNext;
                @Next.performed -= m_Wrapper.m_DialougeMapActionsCallbackInterface.OnNext;
                @Next.canceled -= m_Wrapper.m_DialougeMapActionsCallbackInterface.OnNext;
                @Special1.started -= m_Wrapper.m_DialougeMapActionsCallbackInterface.OnSpecial1;
                @Special1.performed -= m_Wrapper.m_DialougeMapActionsCallbackInterface.OnSpecial1;
                @Special1.canceled -= m_Wrapper.m_DialougeMapActionsCallbackInterface.OnSpecial1;
                @Special2.started -= m_Wrapper.m_DialougeMapActionsCallbackInterface.OnSpecial2;
                @Special2.performed -= m_Wrapper.m_DialougeMapActionsCallbackInterface.OnSpecial2;
                @Special2.canceled -= m_Wrapper.m_DialougeMapActionsCallbackInterface.OnSpecial2;
            }
            m_Wrapper.m_DialougeMapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Next.started += instance.OnNext;
                @Next.performed += instance.OnNext;
                @Next.canceled += instance.OnNext;
                @Special1.started += instance.OnSpecial1;
                @Special1.performed += instance.OnSpecial1;
                @Special1.canceled += instance.OnSpecial1;
                @Special2.started += instance.OnSpecial2;
                @Special2.performed += instance.OnSpecial2;
                @Special2.canceled += instance.OnSpecial2;
            }
        }
    }
    public DialougeMapActions @DialougeMap => new DialougeMapActions(this);
    public interface IInventoryMapActions
    {
        void OnUP(InputAction.CallbackContext context);
        void OnDOWN(InputAction.CallbackContext context);
        void OnLEFT(InputAction.CallbackContext context);
        void OnRIGHT(InputAction.CallbackContext context);
        void OnClose(InputAction.CallbackContext context);
        void OnTYPER(InputAction.CallbackContext context);
        void OnTYPEL(InputAction.CallbackContext context);
        void OnUSE(InputAction.CallbackContext context);
        void OnREMOVE(InputAction.CallbackContext context);
    }
    public interface IDialougeMapActions
    {
        void OnNext(InputAction.CallbackContext context);
        void OnSpecial1(InputAction.CallbackContext context);
        void OnSpecial2(InputAction.CallbackContext context);
    }
}
